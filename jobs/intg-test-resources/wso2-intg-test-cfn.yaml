AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template with an EC2 instance and a RDS
Parameters:
  AMI:
    Type: String
    Description: AMI of the region.
  DBEngine:
    Type: String
    Default: mysql
    Description: Database Engine
    AllowedValues:
      - mysql
      - postgres
      - mariadb
      - sqlserver-ex
      - sqlserver-ee
      - sqlserver-se
      - sqlserver-web
      - oracle-se
      - oracle-se2
      - oracle-ee
      - oracle-se1
  DBEngineVersion:
    Type: String
    Description: Database Engine version
    MinLength: 1
  DBUsername:
    Type: String
    Default: wso2carbon
    Description: Database master account username
    MinLength: 1
    MaxLength: 20
    ConstraintDescription: 'minimum - 1, maximum - 20 characters'
  DBPassword:
    Type: String
    NoEcho: true
    Description: Database master account password
    MinLength: 6
    ConstraintDescription: minimum - 6 characters
  DBClass:
    Default: db.t2.micro
    Description: Database instance class
    Type: String
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
    ConstraintDescription: must be a valid database instance type
  DBAllocatedStorage:
    Default: 20
    Description: Size of the database (GB)
    Type: Number
    MinValue: 20
    MaxValue: 6144
    ConstraintDescription: 'minimum - 20 GB, maximum - 6144 GB'
  EC2KeyPair:
    Description: >-
      This is used to ssh to the node. If you don't have a key, please create
      one from AWS console and rerun the script
    Type: 'AWS::EC2::KeyPair::KeyName'
  ALBCertificateARN:
    Type: String
    Description: >-
      Enter the ARN value of the certificate uploaded to ACM for Application
      Load Balancers
  WSO2InstanceType:
    Description: 'EC2 instance type of the WSO2 EI Node [t2.micro is the free tier]'
    Type: String
    Default: m4.large
    AllowedValues:
      - t2.nano
      - t1.micro
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
    ConstraintDescription: must be a valid EC2 instance type
  WUMUsername:
    Type: String
    Default: ''
    Description: Enter WUM user name
  WUMPassword:
    Type: String
    Default: ''
    NoEcho: true
    Description: >-
      Enter WUM user password to get the updated WSO2 products deployed. If not
      provided standard released pack will be deployed
  ProductName:
    Type: String
    Default: wso2apim
    Description: Enter product name
  ProductVersion:
    Type: String
    Default: 2.2.0
    Description: Enter product version
  OS:
    Type: String
    Default: ubuntu
    Description: >-
      Enter target OS. This will be the username of the created EC2 instances as
      well.
  OSVersion:
    Type: String
    Default: '16.04'
    Description: Enter target OS version.
  JDK:
    Type: String
    Default: ORACLE_JDK8
    Description: Enter target JDK version.
    AllowedValues:
      - OPEN_JDK8
      - ORACLE_JDK8
Resources:
  WSO2InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for IS EC2 compute instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8140
          ToPort: 8140
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9763
          ToPort: 9763
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9443
          ToPort: 9443
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: abbdb5e8-f28b-4bc6-8b63-da9595b59c4a
  WSO2EnvDBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for RDS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupName: !Ref WSO2InstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupName: !Ref WSO2InstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          SourceSecurityGroupName: !Ref WSO2InstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 1521
          ToPort: 1521
          SourceSecurityGroupName: !Ref WSO2InstanceSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d0dcc88f-97f7-4d80-901a-f746d372a295
  WSO2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - WSO2DBInstance
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref AMI
      InstanceType: !Ref WSO2InstanceType
      KeyName: !Ref EC2KeyPair
      Monitoring: 'false'
      "BlockDeviceMappings" : [
         {
            "DeviceName" : "/dev/sda1",
            "Ebs" : { "VolumeSize" : "50" }
         },
      ]
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash
          set -e
          set -o xtrace

          setup_java_env() {
              source /etc/environment

              echo JDK_PARAM=${JDK} >> /opt/wso2/java.txt
              REQUESTED_JDK_PRESENT=$(grep "^${JDK}=" /etc/environment | wc -l)
              if [ $REQUESTED_JDK_PRESENT = 0 ]; then
                printf "The requested JDK, ${JDK}, not found in /etc/environment: \n $(cat /etc/environment)."
                exit 1; // todo: inform via cfn-signal
              fi
              JAVA_HOME=$(grep "^${JDK}=" /etc/environment | head -1 | sed "s:${JDK}=\(.*\):\1:g" | sed 's:"::g')

              echo ">> Setting up JAVA_HOME ..."
              JAVA_HOME_EXISTS=$(grep -r "JAVA_HOME=" /etc/environment | wc -l  )
              if [ $JAVA_HOME_EXISTS = 0 ]; then
                  echo ">> Adding JAVA_HOME entry."
                  echo JAVA_HOME=$JAVA_HOME >> /etc/environment
              else
                  echo ">> Updating JAVA_HOME entry."
                  sed -i "/JAVA_HOME=/c\JAVA_HOME=$JAVA_HOME" /etc/environment
              fi
              source /etc/environment

              echo "export JAVA_HOME=$JAVA_HOME" >> /etc/profile
              source /etc/profile
          }

          apt-get -y install git
          mkdir -p /opt/wso2
          cd /opt/wso2

          setup_java_env
          echo "Installing Apache Maven"
          wget https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
          tar -xvzf apache-maven-3.3.9-bin.tar.gz
          ln -fs apache-maven-3.3.9 maven
          export MAVEN_OPTS="-Xmx2048m -Xms256m"
          export PATH=/opt/wso2/maven/bin/:$PATH

          # echo "Cloning and running product-apim"
          # git clone --branch v2.2.0-update7 http://github.com/wso2/product-apim.git
          # cd product-apim
          # mvn clean install

          apt-get --purge remove -y git
          cat /dev/null > ~/.bash_history && history -c
      Tags:
        - Key: Name
          Value: wso2-apim-intg-node
      SecurityGroups:
        - !Ref WSO2InstanceSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8f512cce-69ee-45de-87ab-5aedd2a93d50
      "AWS::CloudFormation::Init" : {
          "config" : {
              "packages" : {
                  "apt" : {
                    }
                },
               "sources" : {
                },
               "files" : {
               }
          }
       }
  WSO2DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBClass
      Engine: !Ref DBEngine
      EngineVersion: !Ref DBEngineVersion
      DBInstanceIdentifier: !Join
        - ''
        - - !Ref 'AWS::StackName'
          - '-wso2-dbinstance'
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0
      VPCSecurityGroups:
        - !GetAtt WSO2EnvDBSecurityGroup.GroupId
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5352b4e9-46ed-4a23-8bdc-bafc3666cbbd
Outputs:
  WSO2MgtConsoleURL:
    Value: !Sub 'https://${WSO2Instance.PublicDnsName}:9443/carbon'
    Description: Access URL of the Management Console
  WSO2PublicIP:
    Value: !Sub '${WSO2Instance.PublicIp}'
    Description: Private IP of the WSO2 IS Instance
  DatabaseHost:
    Value: !Sub '${WSO2DBInstance.Endpoint.Address}'
    Description: Database Host
  DatabasePort:
    Value: !Sub '${WSO2DBInstance.Endpoint.Port}'
    Description: Database Port
Metadata:
  'AWS::CloudFormation::Designer':
    abbdb5e8-f28b-4bc6-8b63-da9595b59c4a:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    d0dcc88f-97f7-4d80-901a-f746d372a295:
      size:
        width: 60
        height: 60
      position:
        x: -80
        'y': 210
      z: 1
      embeds: []
    5352b4e9-46ed-4a23-8bdc-bafc3666cbbd:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - d0dcc88f-97f7-4d80-901a-f746d372a295
    8f512cce-69ee-45de-87ab-5aedd2a93d50:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - abbdb5e8-f28b-4bc6-8b63-da9595b59c4a
      dependson:
        - 5352b4e9-46ed-4a23-8bdc-bafc3666cbbd
